[실습1]	//배열 만들기

import numpy as np

# 0부터 4까지 연속적인 숫자가 들어있는 배열을 만들어 봅시다!
array = np.array(range(5))

print(array)

#[0 1 2 3 4]



[실습2]	//배열의 기초(1)

import numpy as np

print("1차원 array")
array = np.array(range(10))
print(array)

# 1. array의 자료형을 출력해보세요.
print(type(array))

# 2. array의 차원을 출력해보세요.
print(array.ndim)

# 3. array의 모양을 출력해보세요.
print(array.shape)

# 4. array의 크기를 출력해보세요.
print(array.size)

# 5. array의 dtype(data type)을 출력해보세요.
print(array.dtype)

# 6. array의 인덱스 5의 요소를 출력해보세요.
print(array[5])

# 7. array의 인덱스 3의 요소부터 인덱스 5 요소까지 출력해보세요.
print(array[3:6])

#1차원 array
#[0 1 2 3 4 5 6 7 8 9]
#<class 'numpy.ndarray'>
#1
#(10,)
#10
#int64
#5
#[3 4 5]



[실습3] 배열의 기초(2)

import numpy as np

print("2차원 array")
#1부터 15까지 들어있는 (3,5)짜리 배열을 만듭니다.
matrix = np.array(range(1,16))
matrix.shape = 3,5
print(matrix)


# 1. matrix의 자료형을 출력해보세요.
print(type(matrix))

# 2. matrix의 차원을 출력해보세요.
print(matrix.ndim)

# 3. matrix의 모양을 출력해보세요.
print(matrix.shape)

# 4. matrix의 크기를 출력해보세요.
print(matrix.size)

# 5. matrix의 dtype(data type)을 출력해보세요.
print(matrix.dtype)

# 6. matrix의 dtype을 str로 변경하여 출력해보세요.
print(matrix.astype('str'))

# 7. matrix의 (2,3) 인덱스의 요소를 출력해보세요.
print(matrix[2,3])

# 8. matrix의 행은 인덱스 0부터 인덱스 1까지, 열은 인덱스 1부터 인덱스 3까지 출력해보세요.
print(matrix[0:2, 1:4])

#2차원 array		//1
#[[ 1 2 3 4 5]		
# [ 6 7 8 9 10]
# [ 11 12 13 14 15]]
#<class 'numpy.ndarray'>	
#2			//2
#(3, 5)			//3
#15			//4
#int64			//5
#[['1' '2' '3' '4' '5']		//6
# ['6' '7' '8' '9' '10']
# ['11' '12' '13' '14' '15']]
#14			//7
#[[2 3 4]			//8
# [7 8 9]]



[실습4] Indexing & Slicing

import numpy as np

matrix = np.arange(1, 13, 1).reshape(3, 4)
print(matrix)	#0

# 1. Indexing을 통해 값 2를 출력해보세요.
answer1 = matrix[0, 1]

# 2. Slicing을 통해 매트릭스 일부인 9, 10을 가져와 출력해보세요.
answer2 = matrix[2:, :2]    #2번쨰 행 전부 9~12 그리고 처음부터 2번째까지 = 9~10

# 3. Boolean indexing을 통해 5보다 작은 수를 찾아 출력해보세요.
answer3 = matrix[matrix < 5]

# 4. Fancy indexing을 통해 두 번째 행만 추출하여 출력해보세요.
answer4 = matrix[[1]]

# 위에서 구한 정답을 출력해봅시다.
print(answer1)
print(answer2)
print(answer3)
print(answer4)

#[[ 1 2 3 4]	//0
# [ 5 6 7 8]
# [ 9 10 11 12]]
#2		//1
#[[ 9 10]]		//2
#[1 2 3 4]	//3
#[[5 6 7 8]]	//4
